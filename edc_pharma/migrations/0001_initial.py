# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2020-07-19 13:45
from __future__ import unicode_literals

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_extensions.db.fields
import django_revision.revision_field
import edc_base.model.fields.hostname_modification_field
import edc_base.model.fields.userfield
import edc_base.model.fields.uuid_auto_field
import edc_pharma.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Dispense',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='pharma', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('dispense_type', models.CharField(choices=[('TABLET', 'TABLET'), ('SYRUP', 'SYRUP'), ('IV', 'IV'), ('IM', 'IM'), ('SOLUTION', 'SOLUTION'), ('CAPSULE', 'CAPSULE'), ('SUPPOSITORY', 'SUPPOSITORY')], default='TABLET', max_length=15)),
                ('infusion_number', models.IntegerField(blank=True, help_text='Only required if dispense type IV or IM is chosen', null=True)),
                ('number_of_tablets', models.IntegerField(blank=True, help_text='Only required if dispense type TABLET, CAPSULES, SUPPOSITORIES is chosen', null=True)),
                ('dose', models.CharField(blank=True, help_text='Only required if dispense type SYRUP or SOLUTION is chosen', max_length=20, null=True)),
                ('times_per_day', models.IntegerField(blank=True, help_text='Only required if dispense type TABLET, CAPSULES, SUPPOSITORIES, SYRUP is chosen', null=True)),
                ('total_number_of_tablets', models.IntegerField(blank=True, help_text='Only required if dispense type TABLET or SUPPOSITORY  is chosen', null=True)),
                ('total_volume', models.CharField(blank=True, help_text='Only required if dispense type is SYRUP, IM, IV is chosen', max_length=10, null=True)),
                ('concentration', models.CharField(blank=True, help_text='Only required if dispense type IV, IM, CAPSULES, SOLUTION, SUPPOSITORIES, TABLET is chosen', max_length=60, null=True)),
                ('duration', models.CharField(blank=True, help_text='Only required if dispense type IV or IM is chosen', max_length=15, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, help_text='Only required if IV or IM is chosen', max_digits=5, null=True, verbose_name='Weight in kg')),
                ('prepared_datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('prepared_date', models.DateTimeField(default=datetime.date.today, editable=False)),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalDispense',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='pharma', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('dispense_type', models.CharField(choices=[('TABLET', 'TABLET'), ('SYRUP', 'SYRUP'), ('IV', 'IV'), ('IM', 'IM'), ('SOLUTION', 'SOLUTION'), ('CAPSULE', 'CAPSULE'), ('SUPPOSITORY', 'SUPPOSITORY')], default='TABLET', max_length=15)),
                ('infusion_number', models.IntegerField(blank=True, help_text='Only required if dispense type IV or IM is chosen', null=True)),
                ('number_of_tablets', models.IntegerField(blank=True, help_text='Only required if dispense type TABLET, CAPSULES, SUPPOSITORIES is chosen', null=True)),
                ('dose', models.CharField(blank=True, help_text='Only required if dispense type SYRUP or SOLUTION is chosen', max_length=20, null=True)),
                ('times_per_day', models.IntegerField(blank=True, help_text='Only required if dispense type TABLET, CAPSULES, SUPPOSITORIES, SYRUP is chosen', null=True)),
                ('total_number_of_tablets', models.IntegerField(blank=True, help_text='Only required if dispense type TABLET or SUPPOSITORY  is chosen', null=True)),
                ('total_volume', models.CharField(blank=True, help_text='Only required if dispense type is SYRUP, IM, IV is chosen', max_length=10, null=True)),
                ('concentration', models.CharField(blank=True, help_text='Only required if dispense type IV, IM, CAPSULES, SOLUTION, SUPPOSITORIES, TABLET is chosen', max_length=60, null=True)),
                ('duration', models.CharField(blank=True, help_text='Only required if dispense type IV or IM is chosen', max_length=15, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, help_text='Only required if IV or IM is chosen', max_digits=5, null=True, verbose_name='Weight in kg')),
                ('prepared_datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('prepared_date', models.DateTimeField(default=datetime.date.today, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical dispense',
            },
        ),
        migrations.CreateModel(
            name='HistoricalMedication',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='pharma', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('name', models.CharField(max_length=200)),
                ('storage_instructions', models.TextField(max_length=200)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical medication',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPatient',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='pharma', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('subject_identifier', models.CharField(db_index=True, max_length=20)),
                ('initials', models.CharField(help_text='Format is AA or AAA', max_length=3, validators=[django.core.validators.RegexValidator('^[A-Z]{2,3}$', message='Use CAPS, 2-3 letters')])),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=10)),
                ('dob', models.DateField(blank=True, null=True, validators=[edc_pharma.models.validate_dob])),
                ('sid', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('[\\d]+', 'Invalid format.')])),
                ('consent_date', models.DateTimeField(default=datetime.date.today, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical patient',
            },
        ),
        migrations.CreateModel(
            name='HistoricalProtocol',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='pharma', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('number', models.CharField(max_length=30)),
                ('name', models.CharField(db_index=True, max_length=200)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical protocol',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSite',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='pharma', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('site_code', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('[\\d]+', 'Invalid format.')])),
                ('telephone_number', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator('^[2-8]{1}[0-9]{6}$', 'Invalid format.')])),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical site',
            },
        ),
        migrations.CreateModel(
            name='Medication',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='pharma', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('storage_instructions', models.TextField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='pharma', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('subject_identifier', models.CharField(max_length=20, unique=True)),
                ('initials', models.CharField(help_text='Format is AA or AAA', max_length=3, validators=[django.core.validators.RegexValidator('^[A-Z]{2,3}$', message='Use CAPS, 2-3 letters')])),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=10)),
                ('dob', models.DateField(blank=True, null=True, validators=[edc_pharma.models.validate_dob])),
                ('sid', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('[\\d]+', 'Invalid format.')])),
                ('consent_date', models.DateTimeField(default=datetime.date.today, editable=False)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='pharma', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('initials', models.CharField(max_length=4, validators=[django.core.validators.RegexValidator('^[A-Z]{2,4}$', message='Use CAPS, 2-4 letters')])),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Protocol',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='pharma', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('number', models.CharField(max_length=30)),
                ('name', models.CharField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='pharma', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('site_code', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('[\\d]+', 'Invalid format.')])),
                ('telephone_number', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator('^[2-8]{1}[0-9]{6}$', 'Invalid format.')])),
                ('protocol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edc_pharma.Protocol')),
            ],
        ),
        migrations.AddField(
            model_name='patient',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edc_pharma.Site'),
        ),
        migrations.AddField(
            model_name='medication',
            name='protocol',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edc_pharma.Protocol'),
        ),
        migrations.AddField(
            model_name='historicalsite',
            name='protocol',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_pharma.Protocol'),
        ),
        migrations.AddField(
            model_name='historicalpatient',
            name='site',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_pharma.Site'),
        ),
        migrations.AddField(
            model_name='historicalmedication',
            name='protocol',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_pharma.Protocol'),
        ),
        migrations.AddField(
            model_name='historicaldispense',
            name='medication',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_pharma.Medication'),
        ),
        migrations.AddField(
            model_name='historicaldispense',
            name='patient',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_pharma.Patient'),
        ),
        migrations.AddField(
            model_name='dispense',
            name='medication',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edc_pharma.Medication'),
        ),
        migrations.AddField(
            model_name='dispense',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edc_pharma.Patient'),
        ),
        migrations.AlterUniqueTogether(
            name='dispense',
            unique_together=set([('patient', 'medication', 'prepared_date')]),
        ),
    ]
